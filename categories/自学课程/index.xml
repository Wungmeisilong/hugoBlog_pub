<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>自学课程 :: 类别 :: Maloudown</title>
    <link>http://localhost:1313/Wungmeisilong/hugoBlog_pub.git/categories/%E8%87%AA%E5%AD%A6%E8%AF%BE%E7%A8%8B/</link>
    <description></description>
    <generator>Hugo</generator>
    <language>zh</language>
    <lastBuildDate>Mon, 18 Nov 2024 17:38:06 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/Wungmeisilong/hugoBlog_pub.git/categories/%E8%87%AA%E5%AD%A6%E8%AF%BE%E7%A8%8B/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>21.C语言程序设计（含面试）</title>
      <link>http://localhost:1313/Wungmeisilong/hugoBlog_pub.git/class/21.c%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E5%90%AB%E9%9D%A2%E8%AF%95/</link>
      <pubDate>Mon, 18 Nov 2024 17:38:06 +0800</pubDate>
      <guid>http://localhost:1313/Wungmeisilong/hugoBlog_pub.git/class/21.c%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E5%90%AB%E9%9D%A2%E8%AF%95/</guid>
      <description>1.在线题库练习网站 “语言网【基础】” “大学慕课对应习题【算法基础】” “牛客竞赛【中等】” “LeetCode【较难】” 课程学习 “书籍” “大学慕课” Github项目 “C/C++面试总结项目” “书籍：Github项目” “C/C++面试总结” “系统设计” 题目笔记 1.cahr *s = &#34;AAAA&#34;指针接受一个字符串（右值），当想通过s[0] = ‘B’修改时是无法修改成功的，因为&#34;AAAA&#34;只能读，不能写。 2.一般函数内如果返回char s[] = {“abcd”};那么一般会报错，因为这是一个局部变量，但s[]修改为*s就不会有问题。因为 *s指向的地址是固定的。 3.在自动类型转换中：</description>
    </item>
    <item>
      <title>20.C&#43;&#43;面试</title>
      <link>http://localhost:1313/Wungmeisilong/hugoBlog_pub.git/class/20.c%E5%8A%A0%E5%8A%A0%E9%9D%A2%E8%AF%95/</link>
      <pubDate>Fri, 01 Nov 2024 08:16:41 +0800</pubDate>
      <guid>http://localhost:1313/Wungmeisilong/hugoBlog_pub.git/class/20.c%E5%8A%A0%E5%8A%A0%E9%9D%A2%E8%AF%95/</guid>
      <description>1.网络编程网络编程 网络原理 数据库 C++基础 1.左值引用和右值引用&#xA;数据湖结构与算法 附件</description>
    </item>
    <item>
      <title>7.初次安装AD需要做哪些设置？</title>
      <link>http://localhost:1313/Wungmeisilong/hugoBlog_pub.git/log/7.%E5%88%9D%E6%AC%A1%E5%AE%89%E8%A3%85ad%E9%9C%80%E8%A6%81%E5%81%9A%E5%93%AA%E4%BA%9B%E8%AE%BE%E7%BD%AE/</link>
      <pubDate>Fri, 28 Jun 2024 15:35:13 +0800</pubDate>
      <guid>http://localhost:1313/Wungmeisilong/hugoBlog_pub.git/log/7.%E5%88%9D%E6%AC%A1%E5%AE%89%E8%A3%85ad%E9%9C%80%E8%A6%81%E5%81%9A%E5%93%AA%E4%BA%9B%E8%AE%BE%E7%BD%AE/</guid>
      <description>设置自动保存 打开程序点击系统设置，如下图：&#xA;按照下图步骤设置自动保存，每10分钟保存一次（你也可以设置成其他的，但不建议设置太小或太大比如1分钟或者30分钟）</description>
    </item>
    <item>
      <title>19.设计模式（C&#43;&#43;）</title>
      <link>http://localhost:1313/Wungmeisilong/hugoBlog_pub.git/class/19.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8Fc%E5%8A%A0%E5%8A%A0/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/Wungmeisilong/hugoBlog_pub.git/class/19.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8Fc%E5%8A%A0%E5%8A%A0/</guid>
      <description>组件协作 模板方法-template method 在C语言代码编写中主函数调用常调用库函数，进行功能实现。那么现在面向对象编程中，可以选择在库中调用未来写在主函数中的函数，这个设计方式就叫template method（个人的理解，不是定义）。举个例子，假设有一个lib.h的库，里面写了画圆的步骤，主体框架已经在rung()中写好，但是还有一个函数没用写，该函数是用来指定圆的半径等参数的，这个函数用virtual修饰，在未来主函数中可以继承该类并重写这个函数，最后在调用lib.h库里的run()即可。</description>
    </item>
  </channel>
</rss>